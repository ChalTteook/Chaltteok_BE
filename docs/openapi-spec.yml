openapi: 3.0.3
info:
  title: 찰떡 서비스 API
  description: 찰떡 서비스의 전체 REST API 명세 (자동 생성, 주요 기능별 한국어 설명 포함)
  version: 1.0.0
servers:
  - url: /api/v1
    description: 기본 API 서버
paths:
  # 인증 및 회원
  /auth/register:
    post:
      summary: 회원가입
      description: 이메일, 비밀번호 등으로 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
      responses:
        '201':
          description: 회원가입 성공
        '400':
          description: 잘못된 요청
  /auth/login:
    post:
      summary: 로그인
      description: 이메일, 비밀번호로 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: 로그인 성공
        '401':
          description: 인증 실패
  /auth/social-login:
    post:
      summary: 소셜 로그인
      description: 카카오, 네이버 등 소셜 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialLogin'
      responses:
        '200':
          description: 소셜 로그인 성공
        '400':
          description: 잘못된 요청
  /user/me:
    get:
      summary: 내 정보 조회
      description: JWT 인증 필요, 내 정보 반환
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 내 정보 반환
        '401':
          description: 인증 실패
  /user/me/profile:
    get:
      summary: 내 프로필 정보 조회
      description: JWT 인증 필요, 내 프로필 정보 반환
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 내 프로필 정보 반환
        '401':
          description: 인증 실패
    patch:
      summary: 내 프로필 정보 수정
      description: JWT 인증 필요, 내 프로필 정보 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileUpdate'
      responses:
        '200':
          description: 프로필 수정 성공
        '401':
          description: 인증 실패
  /user/change-password:
    post:
      summary: 비밀번호 변경
      description: JWT 인증 필요, 비밀번호 변경
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
      responses:
        '200':
          description: 비밀번호 변경 성공
        '400':
          description: 잘못된 요청
  /user/me/profile-image:
    post:
      summary: 프로필 이미지 업로드
      description: JWT 인증 필요, 프로필 이미지 업로드
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                profileImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: 업로드 성공
        '400':
          description: 잘못된 요청
    delete:
      summary: 프로필 이미지 삭제
      description: JWT 인증 필요, 프로필 이미지 삭제
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 삭제 성공
        '400':
          description: 잘못된 요청
  # 공통 인증/이메일
  /common/send/auth:
    post:
      summary: 휴대폰 인증번호 발송
      description: 휴대폰 번호로 인증번호 발송
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendAuthCode'
      responses:
        '200':
          description: 인증번호 발송 성공
        '400':
          description: 잘못된 요청
  /common/check/auth:
    post:
      summary: 휴대폰 인증번호 확인
      description: 인증번호 확인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckAuthCode'
      responses:
        '200':
          description: 인증 성공
        '400':
          description: 잘못된 요청
  /common/send/email:
    post:
      summary: 이메일 인증코드 발송
      description: 이메일로 인증코드 발송
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmail'
      responses:
        '200':
          description: 인증코드 발송 성공
        '400':
          description: 잘못된 요청
  # 매장
  /shops:
    get:
      summary: 매장 목록 조회
      description: 매장 리스트 조회, 제휴매장 우선
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: 페이지 번호
        - in: query
          name: limit
          schema:
            type: integer
          description: 페이지당 항목 수
        - in: query
          name: sort
          schema:
            type: string
          description: 정렬 기준
        - in: query
          name: partner_only
          schema:
            type: boolean
          description: 제휴매장만 조회 여부
      responses:
        '200':
          description: 매장 목록 반환
  /shops/{id}:
    get:
      summary: 매장 상세 조회
      description: 매장 상세 정보 조회
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: 매장 ID
      responses:
        '200':
          description: 매장 정보 반환
        '404':
          description: 매장 없음
  # 리뷰
  /reviews/shops/{shopId}:
    get:
      summary: 매장 리뷰 목록 조회
      description: 특정 매장의 리뷰 목록 조회
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
          description: 매장 ID
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: 리뷰 목록 반환
    post:
      summary: 리뷰 작성
      description: JWT 인증 필요, 리뷰 작성
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreate'
      responses:
        '201':
          description: 리뷰 작성 성공
  /reviews/{reviewId}:
    get:
      summary: 리뷰 상세 조회
      description: 리뷰 상세 정보 조회
      parameters:
        - in: path
          name: reviewId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 리뷰 정보 반환
        '404':
          description: 리뷰 없음
  /shops/{shopId}/reviews/{reviewId}:
    put:
      summary: 리뷰 수정
      description: JWT 인증 필요, 리뷰 수정
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
        - in: path
          name: reviewId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdate'
      responses:
        '200':
          description: 리뷰 수정 성공
  # 신고
  /reports/shops/{shopId}:
    post:
      summary: 매장 신고
      description: JWT 인증 필요, 매장 신고
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreate'
      responses:
        '201':
          description: 신고 생성 성공
  /reports/comments/{commentId}:
    post:
      summary: 댓글 신고
      description: JWT 인증 필요, 댓글 신고
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportCreate'
      responses:
        '201':
          description: 신고 생성 성공
  /reports/me:
    get:
      summary: 내가 제출한 신고 목록 조회
      description: JWT 인증 필요, 내가 제출한 신고 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: 신고 목록 반환
  /reports/me/{reportId}:
    get:
      summary: 내가 제출한 특정 신고 상세 조회
      description: JWT 인증 필요, 내가 제출한 신고 상세 조회
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 신고 정보 반환
  # 관리자 - 신고
  /admin/reports:
    get:
      summary: 전체 신고 목록 조회(관리자)
      description: 관리자 권한 필요, 전체 신고 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
        - in: query
          name: target_type
          schema:
            type: string
      responses:
        '200':
          description: 전체 신고 목록 반환
  /admin/reports/{reportId}:
    get:
      summary: 특정 신고 상세 조회(관리자)
      description: 관리자 권한 필요, 특정 신고 상세 조회
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 신고 정보 반환
    put:
      summary: 신고 상태 업데이트(관리자)
      description: 관리자 권한 필요, 신고 상태/코멘트 수정
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: reportId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportStatusUpdate'
      responses:
        '200':
          description: 신고 상태 수정 성공
  /admin/reports/shops/{shopId}:
    get:
      summary: 특정 샵에 대한 신고 목록(관리자)
      description: 관리자 권한 필요, 특정 샵 신고 목록
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: 샵 신고 목록 반환
  /admin/reports/comments/{commentId}:
    get:
      summary: 특정 댓글에 대한 신고 목록(관리자)
      description: 관리자 권한 필요, 특정 댓글 신고 목록
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: integer
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
      responses:
        '200':
          description: 댓글 신고 목록 반환
  /admin/reports/stats:
    get:
      summary: 신고 통계 정보(관리자)
      description: 관리자 권한 필요, 신고 통계 정보
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 신고 통계 반환
  # 관리자 - 제휴매장
  /admin/partner-shops:
    get:
      summary: 제휴매장 목록 조회(관리자)
      description: 관리자 권한 필요, 제휴매장 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          schema:
            type: integer
        - in: query
          name: limit
          schema:
            type: integer
        - in: query
          name: status
          schema:
            type: string
      responses:
        '200':
          description: 제휴매장 목록 반환
    post:
      summary: 제휴매장 등록(관리자)
      description: 관리자 권한 필요, 제휴매장 등록
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerShopCreate'
      responses:
        '201':
          description: 등록 성공
  /admin/partner-shops/{shopId}:
    get:
      summary: 특정 제휴매장 조회(관리자)
      description: 관리자 권한 필요, 특정 제휴매장 정보 조회
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: shopId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 제휴매장 정보 반환
    put:
      summary: 제휴매장 정보 수정(관리자)
      description: 관리자 권한 필요, 제휴매장 정보 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerShopUpdate'
      responses:
        '200':
          description: 수정 성공
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UserRegister:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        name:
          type: string
        phone:
          type: string
    UserLogin:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    SocialLogin:
      type: object
      properties:
        provider:
          type: string
        code:
          type: string
    UserProfileUpdate:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        address:
          type: string
        age:
          type: integer
        gender:
          type: string
        nickName:
          type: string
    ChangePassword:
      type: object
      properties:
        newPassword:
          type: string
        confirmPassword:
          type: string
    SendAuthCode:
      type: object
      properties:
        phone_number:
          type: string
    CheckAuthCode:
      type: object
      properties:
        phone_number:
          type: string
        code:
          type: string
    SendEmail:
      type: object
      properties:
        email:
          type: string
    ReviewCreate:
      type: object
      properties:
        description:
          type: string
        shopPrdId:
          type: integer
    ReviewUpdate:
      type: object
      properties:
        description:
          type: string
    ReportCreate:
      type: object
      properties:
        reportType:
          type: string
        description:
          type: string
    ReportStatusUpdate:
      type: object
      properties:
        status:
          type: string
        adminComment:
          type: string
    PartnerShopCreate:
      type: object
      properties:
        shopId:
          type: integer
        partnerDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
    PartnerShopUpdate:
      type: object
      properties:
        partnerDate:
          type: string
          format: date
        expiryDate:
          type: string
          format: date
        status:
          type: string 