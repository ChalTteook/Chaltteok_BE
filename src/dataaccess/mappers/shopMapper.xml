<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop">  
  <!-- 기본 상점 목록 조회 -->
  <select id="getShops">
    SELECT
        id,
        interest_id,
        title,
        description,
        phone_number,
        open_time,
        close_time,
        address,
        latitude,
        longitude,
        parking,
        floor,
        price,
        img,
        reg_date,
        mod_date
    FROM
        shop
    LIMIT ${limit} OFFSET ${offset}
  </select>
  
  <!-- 가격순으로 정렬된 상점 목록 조회 -->
  <select id="getShopsSortedByPrice">
    SELECT
        id,
        interest_id,
        title,
        description,
        phone_number,
        open_time,
        close_time,
        address,
        latitude,
        longitude,
        parking,
        floor,
        price,
        img,
        reg_date,
        mod_date
    FROM
        shop
    ORDER BY 
        price ASC
    LIMIT ${limit} OFFSET ${offset}
  </select>
  
  <!-- 리뷰 수 기준으로 정렬된 상점 목록 조회 -->
  <select id="getShopsSortedByReviewCount">
    SELECT
        s.id,
        s.interest_id,
        s.title,
        s.description,
        s.phone_number,
        s.open_time,
        s.close_time,
        s.address,
        s.latitude,
        s.longitude,
        s.parking,
        s.floor,
        s.price,
        s.img,
        s.reg_date,
        s.mod_date,
        COUNT(r.id) AS review_count
    FROM
        shop s
    LEFT JOIN 
        shop_review r ON s.id = r.shop_id
    GROUP BY 
        s.id
    ORDER BY 
        review_count DESC
    LIMIT ${limit} OFFSET ${offset}
  </select>
  
  <!-- 추천순(리뷰 좋아요 합계)으로 정렬된 상점 목록 조회 -->
  <select id="getShopsSortedByRecommended">
    SELECT
        s.id,
        s.interest_id,
        s.title,
        s.description,
        s.phone_number,
        s.open_time,
        s.close_time,
        s.address,
        s.latitude,
        s.longitude,
        s.parking,
        s.floor,
        s.price,
        s.img,
        s.reg_date,
        s.mod_date,
        COALESCE(SUM(r.like_count), 0) AS total_likes
    FROM
        shop s
    LEFT JOIN 
        shop_review r ON s.id = r.shop_id
    GROUP BY 
        s.id
    ORDER BY 
        total_likes DESC
    LIMIT ${limit} OFFSET ${offset}
  </select>
  
  <!-- 특정 상점 조회 -->
  <select id="findShopById">
    SELECT
        id,
        interest_id,
        title,
        description,
        phone_number,
        open_time,
        close_time,
        address,
        latitude,
        longitude,
        parking,
        floor,
        price,
        img,
        reg_date,
        mod_date
    FROM
      shop 
    <where>
      id = #{id}
    </where>
  </select>
</mapper>