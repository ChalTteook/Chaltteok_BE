<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CommentMapper">
  <!-- 댓글 생성 -->
  <insert id="createComment">
    INSERT INTO comments (
      review_id,
      user_id,
      content,
      created_at,
      updated_at
    ) VALUES (
      #{reviewId},
      #{userId},
      #{content},
      NOW(),
      NOW()
    )
    <selectKey keyProperty="id" resultType="int" order="AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>

  <!-- 단일 댓글 조회 -->
  <select id="getCommentById">
    SELECT 
      c.*,
      u.name as user_name,
      u.profile_img as user_profile_image
    FROM comments c
    LEFT JOIN users u ON c.user_id = u.id
    WHERE c.id = #{commentId}
  </select>

  <!-- 리뷰에 속한 댓글 목록 조회 -->
  <select id="getCommentsByReviewId">
    SELECT 
      c.*,
      u.name as user_name,
      u.profile_img as user_profile_image
    FROM comments c
    LEFT JOIN users u ON c.user_id = u.id
    WHERE c.review_id = #{reviewId}
    ORDER BY c.created_at DESC
  </select>

  <!-- 댓글 수정 -->
  <update id="updateComment">
    UPDATE comments
    SET 
      content = #{content},
      updated_at = NOW()
    WHERE id = #{id} AND user_id = #{userId}
  </update>

  <!-- 댓글 삭제 (논리적 삭제) -->
  <update id="deleteComment">
    UPDATE comments
    SET 
      is_deleted = true,
      updated_at = NOW()
    WHERE id = #{id} AND user_id = #{userId}
  </update>

  <!-- 댓글 권한 확인 -->
  <select id="checkCommentOwnership">
    SELECT COUNT(1) as count
    FROM comments
    WHERE id = #{commentId} AND user_id = #{userId}
  </select>
</mapper> 